version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile


    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"  # Automatically run migrations  

    volumes:
      - .:/app  # Bind mounts the current directory to /app in the container
    ports:
      - "8000:8000"  # Expose application on port 8000
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/dbname
      - TEST_DATABASE_URL=postgres://user:password@db_test:5432/db_test
      - REDIS_URL=redis://redis:6379  # Configure Redis connection
    depends_on:
      - db
      - db_test
      - redis

  db:
    image: postgres:13  # Use PostgreSQL version 13
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname  # Main database

  db_test:
    image: postgres:13  # Test database also using PostgreSQL version 13
    volumes:
      - postgres_test_data:/var/lib/postgresql/data  # Persist test data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db_test  # Test database name

  redis:
    image: redis:alpine  # Use a lightweight Redis image

  nginx:
    image: nginx:alpine  # Use a lightweight Nginx image
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Nginx configuration file
    ports:
      - "80:80"  # Expose Nginx on port 80
    depends_on:
      - web

volumes:
  postgres_data:
  postgres_test_data: